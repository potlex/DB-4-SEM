--1
DECLARE
PROCEDURE GET_TEACHERS(PCODE TEACHER.PULPIT%TYPE)
IS
CURSOR SR IS SELECT * FROM TEACHER;
BEGIN
FOR ROW_TEACHER IN SR
LOOP
IF PCODE = ROW_TEACHER.PULPIT
THEN
DBMS_OUTPUT.PUT_LINE(ROW_TEACHER.TEACHER||' '||ROW_TEACHER.TEACHER_NAME||' '||ROW_TEACHER.PULPIT||' '||ROW_TEACHER.BIRTHDAY||' '||ROW_TEACHER.SALARY);
END IF;
END LOOP;
END;
BEGIN 
GET_TEACHERS('»—Ë“');
END;
/
--2
DECLARE
COUNT_TEACHERS INTEGER := 0;
FUNCTION GET_TEACHERS(PCODE TEACHER.PULPIT%TYPE)
RETURN NUMBER
IS
NUM INTEGER := 0;
BEGIN
SELECT COUNT(*) INTO NUM FROM TEACHER WHERE PULPIT LIKE PCODE;
RETURN NUM;
END;
BEGIN 
COUNT_TEACHERS := GET_TEACHERS('%»—Ë“%');
DBMS_OUTPUT.PUT_LINE('COUNT TEACHERS:'||COUNT_TEACHERS);
END;
/
--3
CREATE OR REPLACE PROCEDURE GET_TEACHERS (FCODE FACULTY.FACULTY%TYPE)
IS 
T_NAME TEACHER.TEACHER_NAME%TYPE;
T_PULPIT TEACHER.PULPIT%TYPE;
T_FACULTY PULPIT.FACULTY%TYPE;
CURSOR C_TF IS SELECT TEACHER.TEACHER_NAME, TEACHER.PULPIT, PULPIT.FACULTY FROM TEACHER JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT WHERE PULPIT.FACULTY LIKE FCODE;
BEGIN
OPEN C_TF;
FETCH C_TF INTO T_NAME, T_PULPIT, T_FACULTY;
WHILE(C_TF%FOUND)
LOOP
DBMS_OUTPUT.PUT_LINE(T_NAME||' '||T_PULPIT||' '||T_FACULTY);
FETCH C_TF INTO T_NAME, T_PULPIT, T_FACULTY;
END LOOP;
END;

CREATE OR REPLACE PROCEDURE GET_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE)
IS 
S_NAME SUBJECT.SUBJECT_NAME%TYPE;
S_PULPIT SUBJECT.PULPIT%TYPE;
CURSOR C_SP IS SELECT SUBJECT.SUBJECT_NAME, SUBJECT.PULPIT FROM SUBJECT WHERE SUBJECT.PULPIT LIKE PCODE;
BEGIN
OPEN C_SP;
FETCH C_SP INTO S_NAME, S_PULPIT;
WHILE(C_SP%FOUND)
LOOP
DBMS_OUTPUT.PUT_LINE(S_NAME||' '||S_PULPIT);
FETCH C_SP INTO S_NAME, S_PULPIT;
END LOOP;
END;

BEGIN
GET_TEACHERS('%“Œ¬%');
END;
BEGIN
GET_SUBJECTS('%»—Ë“%');
END;
--4
CREATE OR REPLACE FUNCTION GET_NUM_TEACHERS (FCODE FACULTY.FACULTY%TYPE)
RETURN NUMBER
IS 
NUM INTEGER := 0;
BEGIN
SELECT COUNT(*) INTO NUM FROM TEACHER JOIN PULPIT ON TEACHER.PULPIT = PULPIT.PULPIT WHERE PULPIT.FACULTY LIKE FCODE;
RETURN NUM;
END;

CREATE OR REPLACE FUNCTION GET_NUM_SUBJECTS (PCODE SUBJECT.PULPIT%TYPE)
RETURN NUMBER
IS 
NUM INTEGER := 0;
BEGIN
SELECT COUNT(*) INTO NUM FROM SUBJECT WHERE SUBJECT.PULPIT LIKE PCODE;
RETURN NUM;
END;

DECLARE 
C_T INTEGER := 0;
BEGIN 
C_T := GET_NUM_TEACHERS('%’“Ë“%');
DBMS_OUTPUT.PUT_LINE('COUNT TEACHERS:'||C_T);
END;

DECLARE 
C_T INTEGER := 0;
BEGIN 
C_T := GET_NUM_SUBJECTS('%»—Ë“%');
DBMS_OUTPUT.PUT_LINE('COUNT SUBJECTS:'||C_T);
END;
--5
CREATE OR REPLACE PACKAGE TAS IS
PROCEDURE GET_TEACHERS(PCODE TEACHER.PULPIT%TYPE);
PROCEDURE GET_SUBJECTS(PCODE PULPIT.PULPIT%TYPE);
FUNCTION GET_NUM_TEACHERS(FCODE FACULTY.FACULTY%TYPE) RETURN NUMBER;
FUNCTION GET_NUM_SUBJECTS(PCODE PULPIT.PULPIT%TYPE) RETURN NUMBER;
END;
--6
DECLARE
C_T INTEGER := 0;
C_S INTEGER := 0;
BEGIN
BEGIN
GET_TEACHERS('%“Œ¬%');
END;
BEGIN
GET_SUBJECTS('%»—Ë“%');
END;
C_T := GET_NUM_TEACHERS('%“Œ¬%');
DBMS_OUTPUT.PUT_LINE('COUNT TEACHERS:'||C_T);
C_T := GET_NUM_SUBJECTS('%»—Ë“%');
DBMS_OUTPUT.PUT_LINE('COUNT SUBJECTS:'||C_T);
END;
